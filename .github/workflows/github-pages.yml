name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build TypeScript library
        run: npm run build

      - name: Build browser bundle
        run: node scripts/build-browser-bundle.js

      - name: Copy sample images to docs
        run: |
          mkdir -p docs/images
          cp pngsuite/png/basn2c08.png docs/images/
          cp pngsuite/png/basn0g08.png docs/images/
          cp pngsuite/png/basn6a08.png docs/images/
          cp pngsuite/png/basn4a08.png docs/images/
          cp pngsuite/png/basn2c16.png docs/images/
          cp pngsuite/png/basn0g16.png docs/images/
          cp pngsuite/png/basn0g01.png docs/images/
          cp pngsuite/png/basn0g04.png docs/images/

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'docs'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
